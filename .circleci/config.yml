version: 2.1

.constants:
  - &ext-mongodb-version '1.6.1'

commands:
  clear-test-app-cache:
    steps:
      - run:
          name: Clear test app cache
          command: tests/Fixtures/app/console cache:clear --ansi
  disable-php-memory-limit:
    steps:
      - run:
          name: Disable PHP memory limit
          command: echo 'memory_limit=-1' | sudo tee -a /usr/local/etc/php/php.ini
  disable-xdebug-php-extension:
    steps:
      - run:
          name: Disable xdebug PHP extension
          command: sudo rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
  install-mongodb-php-extension:
    steps:
      - install-php-extension-from-pecl:
          extension_name: mongodb
          extension_version: *ext-mongodb-version
  install-php-extension-from-pecl:
    parameters:
      extension_name:
        description: Name of the PHP extension.
        type: string
      extension_version:
        description: Version of the PHP extension.
        type: string
    steps:
      - run:
          name: Install << parameters.extension_name >> PHP extension
          environment:
            BUILD_DIR: /var/tmp/build/ext-<< parameters.extension_name >>-<< parameters.extension_version >>
            SRC_DIR: /usr/src/php/ext/<< parameters.extension_name >>
          command: |
            sudo mkdir -p "$SRC_DIR" "$BUILD_DIR"
            sudo chown -R "$(id -u):$(id -g)" "$SRC_DIR" "$BUILD_DIR"
            cd "$SRC_DIR"
            curl -fsSL "https://pecl.php.net/get/<< parameters.extension_name >>-<< parameters.extension_version >>.tgz" | tar -zx --strip-components 1
            phpize
            cd "$BUILD_DIR"
            "$SRC_DIR"/configure --config-cache
            make -j"$(nproc)"
            sudo make -j"$(nproc)" install
            sudo docker-php-ext-enable << parameters.extension_name >>
  install-symfony-flex:
    steps:
      - run:
          name: Install Symfony Flex
          command: |
            composer global require --prefer-dist --no-progress --no-suggest --ansi \
              symfony/flex
  restore-composer-cache:
    steps:
      - restore_cache:
          name: Restore Composer cache
          keys:
            - composer-{{ .Revision }}
            - composer-{{ .Branch }}
            - composer-
  restore-mongodb-php-extension-build-cache:
    parameters:
      php_version:
        description: PHP version (major.minor).
        type: string
    steps:
      - restore-php-extension-build-cache:
          extension_name: mongodb
          extension_version: *ext-mongodb-version
          php_version: << parameters.php_version >>
  restore-php-cs-fixer-cache:
    steps:
      - restore_cache:
          name: Restore PHP-CS-Fixer cache
          keys:
            - php-cs-fixer-{{ .Revision }}
            - php-cs-fixer-{{ .Branch }}
            - php-cs-fixer-
  restore-php-extension-build-cache:
    parameters:
      extension_name:
        description: Name of the PHP extension.
        type: string
      extension_version:
        description: Version of the PHP extension.
        type: string
      php_version:
        description: PHP version (major.minor).
        type: string
    steps:
      - restore_cache:
          name: Restore << parameters.extension_name >> PHP extension build cache
          keys:
            - ext-<< parameters.extension_name >>-<< parameters.extension_version >>-php<< parameters.php_version >>-
  restore-phpstan-cache:
    steps:
      - restore_cache:
          name: Restore PHPStan cache
          keys:
            - phpstan-{{ .Revision }}
            - phpstan-{{ .Branch }}
            - phpstan-
  save-composer-cache:
    steps:
      - save_cache:
          name: Save Composer cache
          paths:
            - ~/.composer/cache
          key: composer-{{ .Branch }}-{{ .BuildNum }}
      - save_cache:
          name: Save Composer cache
          paths:
            - ~/.composer/cache
          key: composer-{{ .Revision }}-{{ .BuildNum }}
  save-mongodb-php-extension-build-cache:
    parameters:
      php_version:
        description: PHP version (major.minor).
        type: string
    steps:
      - save-php-extension-build-cache:
          extension_name: mongodb
          extension_version: *ext-mongodb-version
          php_version: << parameters.php_version >>
  save-php-cs-fixer-cache:
    steps:
      - save_cache:
          name: Save PHP-CS-Fixer cache
          paths:
            - .php_cs.cache
          key: php-cs-fixer-{{ .Branch }}-{{ .BuildNum }}
      - save_cache:
          name: Save PHP-CS-Fixer cache
          paths:
            - .php_cs.cache
          key: php-cs-fixer-{{ .Revision }}-{{ .BuildNum }}
  save-php-extension-build-cache:
    parameters:
      extension_name:
        description: Name of the PHP extension.
        type: string
      extension_version:
        description: Version of the PHP extension.
        type: string
      php_version:
        description: PHP version (major.minor).
        type: string
    steps:
      - save_cache:
          name: Save << parameters.extension_name >> PHP extension build cache
          paths:
            - /var/tmp/build/ext-<< parameters.extension_name >>-<< parameters.extension_version >>
          key: ext-<< parameters.extension_name >>-<< parameters.extension_version >>-php<< parameters.php_version >>-{{ .BuildNum }}
  save-phpstan-cache:
    steps:
      - save_cache:
          name: Save PHPStan cache
          paths:
            - /tmp/phpstan/cache
          key: phpstan-{{ .Branch }}-{{ .BuildNum }}
      - save_cache:
          name: Save PHPStan cache
          paths:
            - /tmp/phpstan/cache
          key: phpstan-{{ .Revision }}-{{ .BuildNum }}
  update-project-dependencies:
    steps:
      - run:
          name: Update project dependencies
          command: composer update --no-progress --no-suggest --ansi

executors:
  php:
    parameters:
      php_version:
        description: PHP version (major.minor).
        type: string
    docker:
      - image: circleci/php:<< parameters.php_version >>-node

jobs:
  php-cs-fixer:
    description: PHP-CS-Fixer
    parameters:
      php_version:
        description: PHP version (major.minor).
        type: string
    executor:
      name: php
      php_version: << parameters.php_version >>
    environment:
      PHP_CS_FIXER_FUTURE_MODE: '1'
    working_directory: ~/api-platform/core
    steps:
      - checkout
      - disable-xdebug-php-extension
      - disable-php-memory-limit
      - restore-composer-cache
      - install-symfony-flex
      - run:
          name: Install PHP-CS-Fixer
          command: |
            composer global require --prefer-dist --no-progress --no-suggest --ansi \
              friendsofphp/php-cs-fixer:^2.14
      - save-composer-cache
      - restore-php-cs-fixer-cache
      - run:
          name: Run PHP-CS-Fixer
          command: |
            export PATH="$PATH:$HOME/.composer/vendor/bin"
            php-cs-fixer fix --dry-run --diff --ansi
      - save-php-cs-fixer-cache

  phpstan:
    description: PHPStan
    parameters:
      php_version:
        description: PHP version (major.minor).
        type: string
    executor:
      name: php
      php_version: << parameters.php_version >>
    environment:
      APP_DEBUG: '1' # https://github.com/phpstan/phpstan-symfony/issues/37
    working_directory: ~/api-platform/core
    steps:
      - checkout
      - restore-mongodb-php-extension-build-cache:
          php_version: << parameters.php_version >>
      - install-mongodb-php-extension
      - save-mongodb-php-extension-build-cache:
          php_version: << parameters.php_version >>
      - disable-xdebug-php-extension
      - disable-php-memory-limit
      - restore-composer-cache
      - install-symfony-flex
      - update-project-dependencies
      - save-composer-cache
      - clear-test-app-cache
      - restore-phpstan-cache
      - run:
          name: Run PHPStan
          command: vendor/bin/phpstan analyse --ansi
      - save-phpstan-cache

workflows:
  version: 2
  lint:
    jobs:
      - php-cs-fixer:
          php_version: '7.3'
      - phpstan:
          php_version: '7.3'
